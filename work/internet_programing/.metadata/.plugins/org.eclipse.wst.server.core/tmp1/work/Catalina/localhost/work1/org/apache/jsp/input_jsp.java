/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.6
 * Generated at: 2025-04-30 10:35:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class input_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>input.jsp</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"layout.css\">\r\n");
      out.write("<style>\r\n");
      out.write("* { margin: 0; padding: 0; box-sizing: border-box; }\r\n");
      out.write("body { font-family: Arial, sans-serif; }\r\n");
      out.write("	#login_button{\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		font-weight:bold;		\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");

	String stitle = request.getParameter("제목");
	String swriter = request.getParameter("작성자");
	String stext = request.getParameter("내용");
	String spwd = request.getParameter("등록 비밀번호");
	String simportant = request.getParameter("중요도");
	String scolor = request.getParameter("색상");
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("	let obj = document.getElementById(\"tb\");\r\n");
      out.write("	obj.setAttribute(\"style\", \"background-color: ");
      out.print(scolor );
      out.write(";\");\r\n");
      out.write("	\r\n");
      out.write("	let importantCheckbox = document.getElementById(\"중요도\");\r\n");
      out.write("    if (\"");
      out.print(simportant);
      out.write("\" === \"on\") {\r\n");
      out.write("        importantCheckbox.checked = true;\r\n");
      out.write("    } else {\r\n");
      out.write("        importantCheckbox.checked = false;\r\n");
      out.write("    }\r\n");
      out.write("    importantCheckbox.setAttribute(\"disabled\", \"true\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        게시판 제작중\r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <nav>\r\n");
      out.write("    	<ul>\r\n");
      out.write("    		<li><a href=\"home.html\">home</a></li>\r\n");
      out.write("    		<li><a href=\"entire.html\">전체 글 보기</a></li>\r\n");
      out.write("    		<li><a href=\"board.html\">게시판 이름1</a></li>\r\n");
      out.write("    		<li><a href=\"board.html\">게시판 이름2</a></li>  		\r\n");
      out.write("    	</ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <section>\r\n");
      out.write("    	<div class=\"board_title\">\r\n");
      out.write("    		<h1>게시판 이름</h1>\r\n");
      out.write("    			<form style=\"padding-left:10px\">\r\n");
      out.write("    			아이디: <input type=\"text\" name=\"아이디\" value=\"id\">\r\n");
      out.write("    			비밀번호: <input type=\"password\" name=\"비밀번호\" value=\"pwd\">\r\n");
      out.write("    			<button id=\"login_button\" type=\"submit\" >로그인</button>\r\n");
      out.write("    			</form>\r\n");
      out.write("    	</div>    			\r\n");
      out.write("    	<hr> 			\r\n");
      out.write("    	<hr>\r\n");
      out.write("    	<div  class=\"input_form\">\r\n");
      out.write("    	    <form action=\"input.jsp\" method=\"post\">\r\n");
      out.write("    		<table id=\"tb\">\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>제목: </th>\r\n");
      out.write("    				<td><input type=\"text\" name=\"제목\" value=\"");
      out.print(stitle );
      out.write("\" disabled></td>\r\n");
      out.write("    			</tr> \r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>작성자: </th>\r\n");
      out.write("    				<td><input type=\"text\" name=\"작성자\" value=\"");
      out.print(swriter );
      out.write("\" disabled></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>내용: </th>\r\n");
      out.write("    				<td><textarea rows=\"15\" cols=\"60\" name=\"내용\" placeholder=\"");
      out.print(stext );
      out.write("\" disabled></textarea></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>비밀번호: </th>\r\n");
      out.write("    				<td><input style=\"width:70%;\" type=\"text\" name=\"등록 비밀번호\" value=\"");
      out.print(spwd );
      out.write("\" disabled></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>중요여부: </th>\r\n");
      out.write("    				<td style=\"position:relative;right:200px\"><input type=\"checkbox\" name=\"중요도\" id=\"중요도\"></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>메모 색상: </th>\r\n");
      out.write("    				<td><input style=\"width:30px\" type=\"color\" name=\"색상\" disabled></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<th>그림첨부: </th>\r\n");
      out.write("    				<td><input type=\"file\" name=\"그림\" accept=\"image/*\"></td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    			    			\r\n");
      out.write("    		</table>\r\n");
      out.write("    		</form>\r\n");
      out.write("    	</div>\r\n");
      out.write("    	\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("    <footer>\r\n");
      out.write("    	<h1></h1>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
